//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CQRS.Client.CommandServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandServiceReference.IAccountCommandService")]
    public interface IAccountCommandService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountCommandService/Transfer", ReplyAction="http://tempuri.org/IAccountCommandService/TransferResponse")]
        void Transfer(string fromAccount, string toAccount, decimal amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountCommandServiceChannel : CQRS.Client.CommandServiceReference.IAccountCommandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountCommandServiceClient : System.ServiceModel.ClientBase<CQRS.Client.CommandServiceReference.IAccountCommandService>, CQRS.Client.CommandServiceReference.IAccountCommandService {
        
        public AccountCommandServiceClient() {
        }
        
        public AccountCommandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountCommandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountCommandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountCommandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Transfer(string fromAccount, string toAccount, decimal amount) {
            base.Channel.Transfer(fromAccount, toAccount, amount);
        }
    }
}
